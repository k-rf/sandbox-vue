FROM node:20-bookworm

ARG REMOTE_USER
ARG REMOTE_WORKSPACES
ARG REMOTE_HOME

# パッケージのインストール
# ------------------------------------------------------------------------------
RUN apt-get update && export DEBIAN_FRONTEND=noninteractive \
  && apt-get install -y --no-install-recommends sudo less locales ca-certificates curl gnupg lsb-release
RUN npm install -g zx

# Docker のインストール
RUN mkdir -p /etc/apt/keyrings && curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
RUN chmod a+r /etc/apt/keyrings/docker.gpg
RUN echo \
  "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/debian \
  "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | \
  tee /etc/apt/sources.list.d/docker.list > /dev/null
RUN apt-get update && apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

# ユーザー設定
# ------------------------------------------------------------------------------
RUN userdel -r node && useradd -m ${REMOTE_USER} -u 1000 -s /bin/bash
# ローカル開発環境のため許容している
RUN echo "${REMOTE_USER} ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers
RUN usermod -aG docker ${REMOTE_USER}

# 日本語化対応
# ------------------------------------------------------------------------------
RUN sed -i -e 's/# \(ja_JP.UTF-8\)/\1/' /etc/locale.gen \
  && locale-gen \
  && update-locale LANG=ja_JP.UTF-8
ENV LANG=ja_JP.UTF-8

# 永続化
# ------------------------------------------------------------------------------
RUN SNIPPET="export PROMPT_COMMAND='history -a' && export HISTFILE=/commandhistory/.bash_history" \
  && mkdir -p /commandhistory ${REMOTE_HOME}/.vscode-server/extensions ${REMOTE_WORKSPACES}/node_modules \
  && touch /commandhistory/.bash_history \
  && chown -R ${REMOTE_USER}:${REMOTE_USER} /commandhistory ${REMOTE_HOME}/.vscode-server ${REMOTE_WORKSPACES}/node_modules \
  && echo ${SNIPPET} >> "${REMOTE_HOME}/.bashrc"

# ローカルにパッケージのインストール
# ------------------------------------------------------------------------------
USER ${REMOTE_USER}
RUN curl -fsSL https://get.pnpm.io/install.sh | env SHELL=bash sh -
RUN curl -fsSL https://bun.sh/install | bash
RUN sh -c "$(curl -fsSL https://starship.rs/install.sh)" -- --yes \
  && echo 'eval "$(starship init bash)"' >> ${REMOTE_HOME}/.bashrc

# プロンプトのカスタマイズ
# ------------------------------------------------------------------------------
RUN mkdir -p ${REMOTE_HOME}/.config \
  && { \
  echo '[time]'; \
  echo 'disabled = false'; \
  echo 'utc_time_offset = "9"'; \
  echo 'format = "🕘 [$time]($style) "'; \
  echo ''; \
  echo '[container]'; \
  echo 'format = "[$symbol]($style) "'; \
  echo ''; \
  echo '[nodejs]'; \
  echo 'format = "via [📦 $version](bold green) "'; \
  } >> ${REMOTE_HOME}/.config/starship.toml
